// ‚úÖ –û–ø–µ—Ä–∞—Ç–æ—Ä –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ù–ï (!)

!false; // true 

!(3 > 2) === 3 <= 2; // true.
/* –ü–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –ø—Ä–æ–≤–µ—Ä–∫—É false === false */

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–æ–ª—è
let password = 'JavaScript';
function checkPassword(pass) {
    if (!(pass === password)) {
        console.log('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å');
        return;
    }

    console.log('–ü–∞—Ä–æ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π');
}

checkPassword('java script'); // '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å'
checkPassword('JavaScript'); // '–ü–∞—Ä–æ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π' 

!'–ù–µ–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞' // false 

console.log(!!true); // true
!!'–Ω–µ–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞'; // true
!!''; // false
!!1; // true
!!0; // false 

// ‚úÖ –û–ø–µ—Ä–∞—Ç–æ—Ä –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ò–õ–ò (||)

true || false || true ; // true –û–ø–µ—Ä–∞—Ç–æ—Ä—É –ò–õ–ò –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–±—ã —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –ø—Ä–æ—Å—Ç–æ–µ —É—Å–ª–æ–≤–∏–µ –±—ã–ª–æ –∏—Å—Ç–∏–Ω–Ω—ã–º

let condition =  0 || NaN || '—Å—Ç—Ä–æ–∫–∞' || false; // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π condition: '—Å—Ç—Ä–æ–∫–∞'. 


function howDoYouDo(answer) {
  const result = answer || '–¥–∞ –Ω–∏—á–µ–≥–æ';
  return result;
}

howDoYouDo('–≤—Å—ë –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ'); // "–≤—Å—ë –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ"
howDoYouDo(); // "–¥–∞ –Ω–∏—á–µ–≥–æ" 


// üß∞ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è switch-case

//const where = prompt('–ö—É–¥–∞ –µ–¥–µ—à—å? –ù–∞–ª–µ–≤–æ, –Ω–∞–ø—Ä–∞–≤–æ –∏–ª–∏ –ø—Ä—è–º–æ?', '').toLowerCase();

// switch (where) {
//   case '–Ω–∞–ª–µ–≤–æ':
//     alert('–ë—ã—Ç—å —Ç–µ–±–µ –∂–µ–Ω–∞—Ç—ã–º');
//     break
//   case '–ø—Ä—è–º–æ':
//     alert('–ñ–∏–≤—ã–º –Ω–µ –±—ã–≤–∞—Ç—å');
//     break;
//   case "–Ω–∞–ø—Ä–∞–≤–æ":
//     alert('–ë—ã—Ç—å —Ç–µ–±–µ –±–æ–≥–∞—Ç—ã–º');
//     break 
// }




// üß∞ —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–±–µ—Ä–∞—Ç–æ—Ä (?)
// /* —É—Å–ª–æ–≤–∏–µ */ ? /* –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ true */ : /* –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ false */ 

// const tern1 = 5;
// const tern2 = tern1 > 10 ? 5 : '–≤–∞–≥–æ–Ω';

// console.log(tern2); // 0, –ø–æ—Ç–æ–º—É —á—Ç–æ a > 10 ‚Äî false 

// ‚úÖ

// const ageP = parseInt(prompt('–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç?'), 10);
// const ageC = ageP > 18 ? "–ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ —É—á–∞—Å—Ç–∏–µ –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏!" : '–í–∞–º –µ—â—ë –Ω–µ –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 18 –ª–µ—Ç.';
// console.log(ageC);

// ‚úÖ

// const typeCountry = prompt(`–£–∫–∞–∂–∏—Ç–µ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ`.toLocaleLowerCase());
// const typeAge = parseInt(prompt('–£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç'), 10)
// const typeDebt = parseInt(prompt('–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –¥–æ–ª–≥–æ–≤'), 10);

// function typeAll () {
//   const check1 = typeCountry.includes('—Ä—Ñ') || typeCountry.includes('—Ä–æ—Å—Å–∏—è') ? true : console.log('–¢–æ–ª—å–∫–æ –≥—Ä–∞–∂–¥–∞–Ω–∞–º –†–§');
//   const check2 = typeAge >= 18 ? true : console.log('–í—ã–¥–∞–µ–º –∫—Ä–µ–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–º');
//   const check3 = typeDebt <= 0 ? true : console.log("–£ –≤–∞—Å –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–æ–ª–≥–æ–≤");

//   const checkLast = check1 && check2 && check3 ? '–í–∞–º –æ–¥–æ–±—Ä–µ–Ω –∫—Ä–µ–¥–∏—Ç' : '–í–∞–º –æ—Ç–∫–∞–∑–∞–Ω–æ!';
//   console.log(console.log(checkLast));
// }

// typeAll ();

// ‚úÖ
// –î–æ–ø–∏—à–∏—Ç–µ –∫–æ–¥, —á—Ç–æ–±—ã –æ–Ω –ø—Ä–æ–≤–µ—Ä—è–ª, –µ—Å—Ç—å –ª–∏ –≤ –ø–∞—Ä–æ–ª–µ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ ‚Äî –∏ –µ—Å–ª–∏ –µ—Å—Ç—å, –≤—ã–≤–æ–¥–∏–ª –µ–≥–æ –ø–æ–∑–∏—Ü–∏—é –Ω–∞ —ç–∫—Ä–∞–Ω:

// const passwordQwest = prompt('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:', '');
// console.log(passwordQwest);

// for (let i = 0; i <= passwordQwest.length; i = i + 1) {
//     if (passwordQwest.includes('?')) {
//       if(!(passwordQwest.indexOf('?') !== i)) {
//         alert('"?" —è–≤–ª—è–µ—Ç—Å—è ' + (i + 1) + ' —Å–∏–º–≤–æ–ª–æ–º');
//       }
//     } 
//     if (i === passwordQwest.indexOf('?')) {
//       break
//     }
   
// }

// for (let i = 0; i <= passwordQwest.length; i = i + 1) {
//   if (passwordQwest.indexOf('?') !== i) continue;
//   if((passwordQwest.indexOf('?') === i)){
//       alert('"?" —è–≤–ª—è–µ—Ç—Å—è ' + (i + 1) + ' —Å–∏–º–≤–æ–ª–æ–º');
//     }
   
//   if (i === passwordQwest.indexOf('?')) {
//     break
//   }
 
// }

let tesTobJ = {
  true: 'false'
}

tesTobJ = {
  false: 'true'
}
console.log(tesTobJ);


const hum1 = {};
const women = 'mom';

hum1["numberOne"] = women;
console.log(hum1);

const expenO = {
  '—Ä—É–ø': '–Ω–∞ —Å—É–ø',
  '—Ç—Ä—ë—à–∫—É': '–Ω–∞ –∫–∞—Ä—Ç–æ—à–∫—É',
  '–ø—è—Ç—ë—Ä–∫—É': '–Ω–∞ —Ç–µ—Ç—ë—Ä–∫—É', 
  '–¥–µ—Å—è—Ç–∫—É': '–Ω–∞ –∫—É—Ä–æ–ø–∞—Ç–∫—É',
  '—Å–æ—Ç–∫—É': '–Ω–∞ *–æ–¥–∫—É'
};

/* –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–∞ –∑–∞–ø–∏—Å–∞–Ω–æ —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ –ù–∏–∫–æ–ª–∞—è –û–ª–µ–π–Ω–∏–∫–æ–≤–∞ 
¬´–ü–µ—Ä–µ—á–µ–Ω—å —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ –æ–¥–Ω–æ–≥–æ –¥–µ–ª–µ–≥–∞—Ç–∞¬ª */

Object.keys(expenO).forEach(function (a , b, c) {
  console.log(expenO[a]);
});

/* –≤ –∫–æ–Ω—Å–æ–ª–∏ –≤—ã–≤–æ–¥—è—Ç—Å—è –∫–ª—é—á–∏:

  —Ä—É–ø
  —Ç—Ä—ë—à–∫—É
  –ø—è—Ç—ë—Ä–∫—É
  –¥–µ—Å—è—Ç–∫—É
  —Å–æ—Ç–∫—É

*/ 

