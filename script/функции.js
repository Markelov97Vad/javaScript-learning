//                                        üî∑–§—É–Ω–∫—Ü–∏–∏üî∑‚Äî –±–ª–æ–∫–∏ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑.

// –æ–±—ä—è–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é sayHello
function sayHello() {
  console.log('–ü—Ä–∏–≤–µ—Ç');
}

// –≤—ã–∑—ã–≤–∞–µ–º –µ—ë
sayHello(); // "–ü—Ä–∏–≤–µ—Ç" 
// –ö–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –≤—ã–∑–≤–∞–Ω–∞.

// –ü—Ä–∏–º–µ—Ä ‚úÖ

function multiplyFirst(a, b) { // —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–Ω–æ–∂–∏—Ç–µ–ª–∏
  return a * b; // –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
}

multiplyFirst(2, 3); // 6

//            üß∞ –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ —Å—Å—ã–ª–∫–µ üß∞
function hrefFunc(a, b) {
  return a * b;
}

let multiplyRef = hrefFunc;

console.log(hrefFunc === multiplyRef); // true



//                                              üß∞ –û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ üß∞

let batteriesNumber = 12;
let batteriesInTetris = 4;

function findBatteries() {
  const batteriesNumber = 8;

  /* –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä batteriesNumber
  –∏–º–µ–Ω–Ω–æ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª–∏ */
  console.log(batteriesNumber); // 8

  /* –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–∫–æ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –Ω–µ—Ç,
  –ø–æ—ç—Ç–æ–º—É –¥–≤–∏–∂–æ–∫ –≤–∑—è–ª –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∫–æ–¥–∞ —Å–Ω–∞—Ä—É–∂–∏ */
  console.log(batteriesInTetris); // 4
} 


// –ü—Ä–∏–º–µ—Ä ‚úÖ


/* –ó–¥–µ—Å—å –≥–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ */
const i = 'Internet';

function callMe() {
    /* –ê –∑–¥–µ—Å—å –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ callMe */
    console.log(i + 8000); // –≤–æ–∑—å–º—ë—Ç a –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏
}

function callMeToo() {
  console.log(i + 9000); // —Ç–æ–∂–µ –≤–æ–∑—å–º—ë—Ç a –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏
}

callMe(); // Internet8000
callMeToo(); // Internet9000 

// // // // // –ü—Ä–∏–º–µ—Ä ‚úÖ

// –∑–¥–µ—Å—å –≥–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏

const e = 1; // —ç—Ç–æ –≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è

function callMe2() {
  // –∞ –∑–¥–µ—Å—å –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ callMe

  let b = 2; // —ç—Ç–æ –ª–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–∏ callMe
} 
// // // // //
// –ü—Ä–∏–º–µ—Ä ‚úÖ

const w = 1;

function callMe3() {
  const b = 2;

// —Ñ—É–Ω–∫—Ü–∏—è callMeToo –≤–ª–æ–∂–µ–Ω–∞ –≤ CallMe
  function callMeToo() {
        const c = 3;

    console.log(w);
    console.log(b);
    console.log(c);
  }

  callMeToo();
}

callMe3();
// 1 
// 2
// 3 

/* –ï—Å–ª–∏ –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É, –¥–≤–∏–∂–æ–∫ JavaScript —Å–Ω–∞—á–∞–ª–∞ –∏—â–µ—Ç –µ–≥–æ –≤ —Ç–µ–ª–µ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, 
–∏ —É–∂–µ –ø–æ—Ç–æ–º —Å–Ω–∞—Ä—É–∂–∏. –ü–æ—ç—Ç–æ–º—É –µ—Å–ª–∏ –∏ —Å–Ω–∞—Ä—É–∂–∏, –∏ –≤–Ω—É—Ç—Ä–∏ –µ—Å—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã, 
–¥–≤–∏–∂–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º, –∞ –≤–Ω–µ—à–Ω–∏–π ‚Äî –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç.*/

// –ü—Ä–∏–º–µ—Ä ‚úÖ

const f = 'Hello';

function callMe4() {
    const f = 'world';

    console.log(f);
}

callMe4(); // "world" 

// –ø—Ä–∏–º–µ—Ä ‚úÖ

function callMeFromTheInside() {
  console.log('Hello');
}

function callMe5() {
  function callMeFromTheInside() {
    console.log('world');
  }
  console.log(callMeFromTheInside());
}

callMe5(); // "world" 

//                                             üß∞ —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π  Function Declaration üß∞

function multiplyDecl(a, b) {
  return a * b;
} 
multiplyDecl(2, 3); // 6 

//                                             üß∞ —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π  Function Expression (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ) üß∞

// –∑–∞–ø–∏—à–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é multiply
const multiplySecond = function (a, b) {
  return a * b;
};

// –µ—ë –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –ø–æ –∏–º–µ–Ω–∏
multiplySecond(2, 3); // 6 

// —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–∞–≤–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è ‚Äî –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–∞ 

element.addEventListener('click', function () {
  console.log('–ö–ª–∏–∫');
 });

//                                                     üß∞ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π üß∞
// function (a) {
//  console.log(a);
//}

// –ë—É–¥–µ—Ç –æ—à–∏–±–∫–∞ 

//                      üß∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º. –≠—Ç–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–π –ø—Ä–∏—ë–º —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–ª–±—ç–∫–æ–≤: üß∞

// –ø–µ—Ä–µ–¥–∞–Ω–Ω–∞—è –º–µ—Ç–æ–¥—É —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–æ–Ω–∏–º–Ω–∞ ‚Äî —É –Ω–µ—ë –Ω–µ—Ç –∏–º–µ–Ω–∏
element.addEventListener('click', function () {
  console.log('–ö–ª–∏–∫');
 });
 
const arrFunctiun = [1, 2, 3];
 
// —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–æ–∂–µ –∞–Ω–æ–Ω–∏–º–Ω–∞
arrFunctiun.map(function (item) {
   return item * 2;
  }); 

 // –ú—ã –ø–µ—Ä–µ–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –º–µ—Ç–æ–¥—É, –∏ –ø–æ—Ç–æ–º –æ–Ω–∞ –Ω–∞–º –Ω–µ –Ω—É–∂–Ω–∞. –ü–æ—ç—Ç–æ–º—É –Ω–µ—Ç —Å–º—ã—Å–ª–∞ –¥–∞–≤–∞—Ç—å –µ–π –∏–º—è.

 //                                                   üß∞ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–∑–æ–≤–∞ –¥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è üß∞

 // —Å–Ω–∞—á–∞–ª–∞ –≤—ã–∑–≤–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é ‚úÖ
console.log(double(2)); // 4

// –∞ –ø–æ—Ç–æ–º –æ–±—ä—è–≤–∏–ª–∏
function double(num) {
  return num * 2;
}
/*
double(2); // –æ—à–∏–±–∫–∞

const double = function (num) {
  return num * 2;
}; 
*/
// /////////////
// Function Declaration ‚úÖ
function double(num) {
  return num * 2;
}

// Function Expression ‚úÖ
const triple = function (num) {
  return num * 3;
};

double(2); // 4
triple(2); // 6 
////////////////
//

//


function makeHelloWorld() {
  function helloWorld() {
    console.log('Hello World!');
  }
  return helloWorld;
};
console.log(makeHelloWorld());
const dropFunc = makeHelloWorld();
dropFunc(); // 'Hello World!'

//                                                üß∞ –§—É–Ω–∫—Ü–∏–∏ ‚Äî —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è üß∞

// ‚úÖ –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
const multiplyFunc = function (a, b) {
  return a * b;
};

multiplyFunc(2, 3); // 6

// –ø–µ—Ä–µ–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç
const resultTest = [1, 2, 3].reduce(multiplyFunc);
console.log(resultTest); // 6 - –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤—Å–µ—Ö —á–∏—Å–µ–ª –≤ –º–∞—Å—Å–∏–≤–µ 



// ‚úÖ –§—É–Ω–∫—Ü–∏—é –¥–∞–∂–µ –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –∏–∑ –¥—Ä—É–≥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏:

function createFunction() {
  function simpleFunction() {
    console.log('–ú–µ–Ω—è –≤–µ—Ä–Ω—É–ª–∏, –∞ –∑–∞—Ç–µ–º –≤—ã–∑–≤–∞–ª–∏!');
  }
  /* –º—ã –Ω–µ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ—ë */
  return simpleFunction;
}
// –≤ newFunction –∑–∞–ø–∏—à–µ—Ç—Å—è —Å—Å—ã–ª–∫–∞ –Ω–∞ simpleFunction
const newFunction = createFunction();

newFunction(); // "–ú–µ–Ω—è –≤–µ—Ä–Ω—É–ª–∏, –∞ –∑–∞—Ç–µ–º –≤—ã–∑–≤–∞–ª–∏!"

// ‚úÖ –ú–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏ —Ñ—É–Ω–∫—Ü–∏—é, –æ–±—ä—è–≤–ª–µ–Ω–Ω—É—é –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º. –ü—Ä–∏ —ç—Ç–æ–º –æ–±–∞ –∏–º–µ–Ω–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å:

function answerNumber() {
  console.log('42!');
}

const answer = answerNumber;

answerNumber();
// 42!
answer();
// 42!

// ‚úÖ —Å–≤–æ–π—Å—Ç–≤–æ length –≤–µ—Ä–Ω—ë—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏:

const answer2 = function() {
  console.log('42!')
}

console.log(answer2.length)
// 0

const sumFuncT = function(a, b) {
  return a + b
}

console.log(sumFuncT.length)
// 2

// üõ† –§—É–Ω–∫—Ü–∏—è–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ –∫–∞–∫ –æ–±—ã—á–Ω—ã–º –æ–±—ä–µ–∫—Ç–∞–º. ‚úÖ

const calcNum = function() {}

calcNum.type = 'numbers'

console.log(calcNum.type)
// numbers



//                                                      üß∞ C—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ üß∞

// —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ ‚úÖ
const consoleCat = function (cat) {
  console.log('cat');
};
consoleCat();
// —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚úÖ
const consoleWombat = (wombat) => {
  console.log('wombat');
};
consoleWombat();

// –ï—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–∏–≤–∞ return ‚Äî –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ —Ç–µ–ª–µ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –º–æ–∂–Ω–æ –æ–ø—É—Å—Ç–∏—Ç—å –∏ –¥–∏—Ä–µ–∫—Ç–∏–≤—É return, –∏ —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏:

/* —ç—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–¥–µ–Ω—Ç–∏—á–Ω—ã */
const singleAnecdote = (anecdote) => {
  return `—è –∑–Ω–∞—é —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∞–Ω–µ–∫–¥–æ—Ç: ${anecdote}`;
};

const shorterSingleAnecdote = (anecdote) => `—è –∑–Ω–∞—é —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∞–Ω–µ–∫–¥–æ—Ç: ${anecdote}`;

// –ï—Å–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –æ–±—ä–µ–∫—Ç, –µ–≥–æ –Ω—É–∂–Ω–æ –∑–∞–∫–ª—é—á–∏—Ç—å –≤ –∫—Ä—É–≥–ª—ã–µ —Å–∫–æ–±–∫–∏. 
// –ò–Ω–∞—á–µ —Ç–æ, —á—Ç–æ –≤ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö, –¥–≤–∏–∂–æ–∫ –≤–æ—Å–ø—Ä–∏–º–µ—Ç –∫–∞–∫ —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏:

// –≤–æ—Ç —Ç–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚úÖ
const colorHex = () => ({ white: '#FFF' });

// –∞ –≤–æ—Ç —Ç–∞–∫ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ
const colorHexWhite = () => { white: '#FFF' }; 

// –ï—Å–ª–∏ —É —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä, –º–æ–∂–Ω–æ –Ω–µ –∑–∞–∫–ª—é—á–∞—Ç—å –µ–≥–æ –≤ —Å–∫–æ–±–∫–∏: ‚úÖ

// –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —É–∫–∞–∑—ã–≤–∞—é—Ç –≤ —Å–∫–æ–±–∫–∞—Ö 
const boatDeparture = (eater, food) => {
  console.log(`—á–µ—Ä–µ–∑ —Ä–µ—á–∫—É –≤ –ª–æ–¥–∫–µ –ø–æ–ø–ª—ã–≤—É—Ç ${eater} –∏ ${food}`);    
};

boatDeparture('–∫–æ–∑—ë–ª', '–∫–∞–ø—É—Å—Ç–∞');

// —á–µ—Ä–µ–∑ —Ä–µ—á–∫—É –≤ –ª–æ–¥–∫–µ –ø–æ–ø–ª—ã–≤—É—Ç –∫–æ–∑—ë–ª –∏ –∫–∞–ø—É—Å—Ç–∞

// –µ—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –æ–¥–∏–Ω, —Å–∫–æ–±–∫–∏ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã ‚úÖ

const boatArrival = survivor => {
  console.log(`–¥–æ –¥—Ä—É–≥–æ–≥–æ –±–µ—Ä–µ–≥–∞ –¥–æ–±–µ—Ä—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ ${survivor}`);
};

boatArrival('–∫–æ–∑—ë–ª'); // –¥–æ –¥—Ä—É–≥–æ–≥–æ –±–µ—Ä–µ–≥–∞ –¥–æ–±–µ—Ä—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫–æ–∑—ë–ª 

//                                                      üß∞ –°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –∫–æ–ª–ª–±—ç–∫–∏üß∞

const arrayCallBack = [1, 2, 3, 4];

arrayCallBack.forEach(() => {
  console.log('–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞!');
});

// ‚úÖ

const arrayReturn = [1, 2, 3, 4];

const newArray = arrayReturn.map(elem => elem * 2); 

// –í ES6 –ø–æ—è–≤–∏–ª–∞—Å—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:
function generateName(firstName, lastName, middleName = '') {
  return `${firstName} ${middleName} ${lastName}`;
}

generateName('–ú–∞—à–∞', '–ü–µ—Ç—Ä–æ–≤–∞'); // –ú–∞—à–∞  –ü–µ—Ç—Ä–æ–≤–∞
generateName('–ú–∞—Ä–∏—è', '–ü–µ—Ç—Ä–æ–≤–∞', '–ò–≤–∞–Ω–æ–≤–Ω–∞'); // –ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞ 

// –ü–∞—Ä–∞–º–µ—Ç—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ª—é–±–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: —á–∏—Å–ª–æ, —Å—Ç—Ä–æ–∫—É, –æ–±—ä–µ–∫—Ç, —Ñ—É–Ω–∫—Ü–∏—é. 
// –≠—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—É, –µ—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –∏–ª–∏ —Ä–∞–≤–µ–Ω undefined. ‚úÖ

function generateName(firstName, lastName = '<–±–µ–∑ —Ñ–∞–º–∏–ª–∏–∏>', middleName = '<–±–µ–∑ –æ—Ç—á–µ—Å—Ç–≤–∞>') {
  return `${firstName} ${middleName} ${lastName}`;
}

generateName('–ú–∞—à–∞', '–ü–µ—Ç—Ä–æ–≤–∞'); // –ú–∞—à–∞ <–±–µ–∑ –æ—Ç—á–µ—Å—Ç–≤–∞> –ü–µ—Ç—Ä–æ–≤–∞
generateName('–ú–∞—à–∞', '–ü–µ—Ç—Ä–æ–≤–∞', undefined); // –ú–∞—à–∞ <–±–µ–∑ –æ—Ç—á–µ—Å—Ç–≤–∞> –ü–µ—Ç—Ä–æ–≤–∞
generateName('–ú–∞—à–∞', '–ü–µ—Ç—Ä–æ–≤–∞', null); // –ú–∞—à–∞ null –ü–µ—Ç—Ä–æ–≤–∞
generateName('–ú–∞—à–∞', '–ü–µ—Ç—Ä–æ–≤–∞', ''); // –ú–∞—à–∞  –ü–µ—Ç—Ä–æ–≤–∞
generateName('–ú–∞—Ä–∏—è', '–ò–≤–∞–Ω–æ–≤–Ω–∞'); // –ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–Ω–∞ <–±–µ–∑ —Ñ–∞–º–∏–ª–∏–∏>

//                                            üß∞ –§—É–Ω–∫—Ü–∏–∏ —Å –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º —á–∏—Å–ª–æ–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ üß∞
// –í ES6 –ø–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä: ... (—Ç—Ä–∏ —Ç–æ—á–∫–∏). 
// –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏ –æ–∂–∏–¥–∞–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–∏ —Ç—Ä–∏ —Ç–æ—á–∫–∏ ... –Ω–∞–∑—ã–≤–∞—é—Ç –ª–∏–±–æ spread, –ª–∏–±–æ rest.


// spread üß∞
const numsXxx = [4, 8, 15, 16, 23, 42];

/* –û–ø–µ—Ä–∞—Ç–æ—Ä spread —Ä–∞–∑–ª–æ–∂–∏—Ç –º–∞—Å—Å–∏–≤ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ
–∞—Ä–≥—É–º–µ–Ω—Ç—ã: 4, 8, 15 –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ */
console.log(Math.max(...numsXxx)); // 42


// rest üß∞
// –û–Ω–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç –¥–µ–π—Å—Ç–≤–∏–µ, –æ–±—Ä–∞—Ç–Ω–æ–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É spread: —Å–æ–±–∏—Ä–∞—é—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –º–∞—Å—Å–∏–≤:
// –í–Ω–∏–º–∞–Ω–∏–µ: rest-–ø–∞—Ä–∞–º–µ—Ç—Ä –≤—Å–µ–≥–¥–∞ —Å—Ç–æ–∏—Ç –≤ –∫–æ–Ω—Ü–µ.

function consoleDogs(firstDog, ...otherDogs) {
  console.log(`–ü–µ—Ä–≤—ã–π: ${firstDog}`);
  console.log(`–û—Å—Ç–∞–ª—å–Ω—ã–µ: ${otherDogs}`);
}

consoleDogs('–°–ø–∞–Ω–∏–µ–ª—å', '–û–≤—á–∞—Ä–∫–∞', '–ë–æ—Ä–∑–∞—è', '–ú–µ—Ç–∏—Å')
/* –í –∫–æ–Ω—Å–æ–ª—å –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ:
  –ü–µ—Ä–≤—ã–π: –°–ø–∞–Ω–∏–µ–ª—å
  –û—Å—Ç–∞–ª—å–Ω—ã–µ: ['–û–≤—á–∞—Ä–∫–∞', '–ë–æ—Ä–∑–∞—è', '–ú–µ—Ç–∏—Å']
*/

//                                            üß∞ –°—Ç–∞—Ä—ã–π –∫–æ–¥. –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ARGUMENTS üß∞
// –í —Å—Ç–∞—Ä–æ–º –∫–æ–¥–µ, –¥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ spread, –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–∫–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ ‚Äî –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é arguments.
function gimmeSomeArguments() {
  console.log(arguments);
}

gimmeSomeArguments(1, 2); // [1, 2]
gimmeSomeArguments('a', 'b', 'c', 'd', 'e'); // ['a', 'b', 'c', 'd', 'e']max 

// ‚úÖ

function max(...args) {
  let result = args[0];

  for (let i = 0; i < args.length; i += 1) {
    if (result < args[i]) {
      result = args[i];
    }
  }

  return result;
}

console.log(max(4, 8, 15, 16, 23, 42)); // 42