// üß∞ —Å–æ–±—ã—Ç–∏–µ keydown üß∞

/* 
document.addEventListener('keydown', function () {
  console.log('–ù–∞ —á—Ç–æ –Ω–∏ –Ω–∞–∂–º–∏ ‚Äî —è –ø–æ—è–≤–ª—é—Å—å');
});  
*/


// üß∞ –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É keydown, keypress –∏ keyup üß∞
// https://pictures.s3.yandex.net/resources/keyup_down_press_2_1588417097.gif

// —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –æ–¥–∏–Ω —Ä–∞–∑, –∫–æ–≥–¥–∞ –Ω–∞–∂–∞–ª–∏ –∫–ª–∞–≤–∏—à—É
// document.addEventListener('keypress', function() {
//   console.log('–ù–∞–∂–∞–ª–∏ –∫–ª–∞–≤–∏—à—É');
// });

// // –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –º–Ω–æ–≥–æ —Ä–∞–∑, –∫–æ–≥–¥–∞ –∫–ª–∞–≤–∏—à–∞ –Ω–∞–∂–∞—Ç–∞
// document.addEventListener('keydown', function() {
//   console.log('–ö–ª–∞–≤–∏—à–∞ –∑–∞–∂–∞—Ç–∞');
// });

// // —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –æ–¥–∏–Ω —Ä–∞–∑, –∫–æ–≥–¥–∞ –æ—Ç–ø—É—Å—Ç–∏–ª–∏ –∫–ª–∞–≤–∏—à—É
// document.addEventListener('keyup', function() {
//   console.log('–û—Ç–ø—É—Å—Ç–∏–ª–∏ –∫–ª–∞–≤–∏—à—É');
// });

// . üß∞ —É event –µ—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ key –∏ keyCode. –ü–µ—Ä–≤–æ–µ —Ö—Ä–∞–Ω–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–∂–∞—Ç–æ–π –∫–ª–∞–≤–∏—à–∏, –≤—Ç–æ—Ä–æ–µ ‚Äî –µ—ë —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥. üß∞

// ‚úÖ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ü–ª–µ–π–ª–∏—Å—Ç–∞

addButton.addEventListener('click', function (evt) {
  evt.preventDefault();
  addSong(artistInput.value, titleInput.value);
  console.log('—Å—Ä–∞–±–æ—Ç–∞–ª –ø–µ—Ä–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫');
  setSubmitButtonState(false); // –¥–µ–ª–∞–µ—Ç –∫–Ω–æ–ø–∫—É –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π
});

artistInput.addEventListener('keydown', keyHandler);

titleInput.addEventListener('keydown', keyHandler);

function skolko() {
  // –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∫–æ–¥ –∑–¥–µ—Å—å
  if(!skolko.times) {
    skolko.times = 0;
  } 
  return skolko.times += 1;
}

//console.log(typeof 'string');
//typeof 'string' === typeof evt.key
function adc (evt){
  if (Number.isNaN(Number(evt))) {
    if (evt === '–π') {
      return `${evt}`+ ' - –π–æ–≥—É—Ä—Ç';
    }
     else if (evt === '—Ü'){
      return `${evt}`+ ' - —Ü–∞—Ä—å üëë';
    } else if (evt === '—É'){
      return `${evt}`+ ' - —É–ª–∏—Ç–∫–∞ üêå';
    } else if (evt === '–∫'){
      return `${evt}`+ ' - –∫–∞–∫–∞—à–∫–∞';
    } else if (evt === '–µ'){
      return `${evt}`+ ' - –ï—Ä–∞–ª–∞—à';
    } else if (evt === '–Ω'){
      return `${evt}`+ ' - –Ω–∞–≤–æ–∑';
    } else if (evt === '–≥'){
      return `${evt}`+ ' - –≥–æ–ª—É–±—å';
    } else if (evt === '—à'){
      return `${evt}`+ ' - —à–∞—à–ª—ã–∫';
    } else if (evt === '—â'){
      return `${evt}`+ ' - —â—É–∫–∞';
    } else if (evt === '–∑'){
      return `${evt}`+ ' - –∑–∞–Ω–æ–∑–∞';
    } else if (evt === '—Ö'){
      return `${evt}`+ ' - —Ö–ª—ã—Å—Ç';
    } else if (evt === '—ä'){
      return `${evt}`+ ' - –∑–Ω–∞–∫';
    } else if (evt === '—Ñ'){
      return `${evt}`+ ' - —Ñ–ª–∞–º–∏–Ω–≥–æ';
    } else if (evt === '—ã'){
      return `${evt}`+ ' - –´ ‚Äì –≥–æ–ª—ã–π –≤–µ–ø—Ä—å, –∏–∑ –∫–Ω–∏–≥–∏ –°—Ç—Ä—É–≥–∞—Ü–∫–∏—Ö ¬´–¢—Ä—É–¥–Ω–æ –±—ã—Ç—å –±–æ–≥–æ–º¬ª';
    } else if (evt === '–≤'){
      return `${evt}`+ ' - –≤–æ–≥–æ–Ω';
    } else if (evt === '–∞'){
      return `${evt}`+ ' - –∞—Å—Ç—Ä–æ–Ω–∞–≤—Ç';
    } else if (evt === '–ø'){
      return `${evt}`+ ' - –ø–æ–º–∏–¥–æ—Ä';
    } else if (evt === '—Ä'){
      return `${evt}`+ ' - —Ä—ã–ª–æ';
    } else if (evt === '–æ'){
      return `${evt}`+ ' - –æ–≥—Ä—ã–∑–æ–∫';
    } else if (evt === '–ª'){
      return `${evt}`+ ' - –ª—å–¥–∏–Ω–∞';
    } else if (evt === '–¥'){
      return `${evt}`+ ' - –¥–∞—Ä–º–æ–µ–¥';
    } else if (evt === '–∂'){
      return `${evt}`+ ' - –∂–∏—Ä';
    } else if (evt === '—ç'){
      return `${evt}`+ ' - —ç–Ω–µ—Ä–≥–∏—è';
    } else if (evt === '—ë'){
      return `${evt}`+ ' - —ë–∂';
    } else if (evt === '—è'){
      return `${evt}`+ ' - —è—Ä–ª—ã–∫';
    } else if (evt === '—á'){
      return `${evt}`+ ' - —á—É–≥—É–Ω';
    } else if (evt === '—Å'){
      return `${evt}`+ ' - —Å–µ–ª—å–¥—å';
    } else if (evt === '–º'){
      return `${evt}`+ ' - –º–æ–ª–æ—Ç';
    } else if (evt === '–∏'){
      return `${evt}`+ ' - –∏–Ω–∏–π';
    } else if (evt === '—Ç'){
      return `${evt}`+ ' - —Ç—Ä—É–±–∞';
    } else if (evt === '—å'){
      return `${evt}`+ ' - –∑–Ω–∞–∫';
    } else if (evt === '–±'){
      return `${evt}`+ ' - –±–æ—Ä–æ–≤';
    } else if (evt === '—é'){
      return `${evt}`+ ' - —é–≤–µ–ª–∏—Ä';
    } 
  } else if (typeof 'string' === typeof evt) {
    return evt * evt;
  } else {
    console.log('–≤—Å–µ –ø—Ä–æ–ø–∞–ª–æ');
  }
}

function keyHandler (event) {
  if (event.key === 'Enter') {
    addSong(artistInput.value, titleInput.value);
  }
  const xXx = event.key.toLowerCase()
  console.log(adc(xXx));
  
};

//                    üß∞ –°–Ω—è—Ç–∏–µ —Å–ª—É—à–∞—Ç–µ–ª—è removeEventListener üß∞


artistInput.removeEventListener('keydown', keyHandler); // –æ—Ç–∫–ª—é—á–∏—Ç —Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏–π –≤ input '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å'

addButton.removeEventListener('click', function () {
  addSong(artistInput.value, titleInput.value);
}); // –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, —Ç–∫ js –Ω–µ –≤–∏–¥–∏—Ç —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é

// ‚úÖ
// character ‚Äî —ç—Ç–æ –ø–µ—Ä—Å–æ–Ω–∞–∂. –í –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–µ health
// —Ö—Ä–∞–Ω–∏—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ –∑–¥–æ—Ä–æ–≤—å—è

const character = {
  health: 200
};

// –æ–±—ä—è–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é increaseHealth,
// –∞–Ω–≥–ª. increase health ‚Äî —É–≤–µ–ª–∏—á–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ
function increaseHealth(evt) {
    character.health = character.health + 50; // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—á–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è

  // –∫–∞–∫ —Ç–æ–ª—å–∫–æ –∑–µ–ª—å–µ –≤—ã–ø–∏—Ç–æ,
  // –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª—è–µ—Ç—Å—è —Å –∑–µ–ª—å—è
    evt.target.removeEventListener('click', increaseHealth);
}

// –¥–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å —ç–ª–µ–º–µ–Ω—Ç—É –∑–µ–ª—å—è
// –∞–Ω–≥–ª. potion ‚Äî –∑–µ–ª—å–µ
//potion.addEventListener('click', increaseHealth);

