//              üî∑ –û–±—ä–µ–∫—Ç—ã üî∑

const exampleY = new Object('HOME'); // –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –æ–±—ä–µ–∫—Ç–∞
const exampleU = {}; // –ª–∏—Ç–µ—Ä–∞–ª –æ–±—ä–µ–∫—Ç–∞
console.log(exampleY);
const car = {
  //–∫–ª—é—á // –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤
  model: '–í–ê–ó 2101',
  year: 1983,
  doors: 4,
  hasAirConditioner: false
};
console.log('doors' in car);
//  üß∞ –æ–±—å–µ–∫—Ç –≤ –æ–±—å–µ–∫—Ç–µ üß∞

const car2 = {
  model: '–í–ê–ó 2101',
  year: 1983,
  doors: 4,
  hasAirConditioner: false,
  owner: {
    name: '–ü—ë—Ç—Ä',
    age: 42
  }
}; 

let stringName = '–ï–≥–æ—Ä'
let objact = {
  name: '–í–∞–¥–∏–º',
  age: 25,
  [stringName]: true,
};

console.log(objact[stringName]);

// ‚úÖ —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—å–µ–∫—Ç–∞

const pet = 'dog'
const pet2 = new String('dog') // –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –æ–±—ä–µ–∫—Ç

console.log(pet === pet2)
// false, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ pet2 –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –æ–±—ä–µ–∫—Ç

console.dir(pet2);
console.log(pet2);
/* –í—ã–≤–µ–¥–µ—Ç
{
  0: "d",
  1: "o",
  2: "g",
  length: 3
}
*/

// üß∞ –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É üß∞

const objactT = {
  one: 1,
  two: 2,
  three: 3
};

console.log(objactT.one); // 1
console.log(objactT.two); // 2
console.log(objactT.three); // 3 

// üî¥ –û—à–∏–±–∫–∏ –Ω–µ –±—É–¥–µ—Ç. –ü—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —Å–≤–æ–π—Å—Ç–≤—É, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤ –æ–±—ä–µ–∫—Ç–µ –Ω–µ—Ç, –≤–µ—Ä–Ω—ë—Ç—Å—è undefined.

// üß∞ –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –ø—Ä–∏ –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏–∏. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∏ –ø–æ–∑–∂–µ üß∞

// ‚úÖ –∑–∞–ø–∏—à–µ–º –µ—â—ë –æ–¥–Ω–æ
objactT.four = 4;

console.log(objactT.four); // 4

// üß∞ –°–≤–æ–π—Å—Ç–≤—É –º–æ–∂–Ω–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: üß∞

const human = {};
const mom = '–º–∞–º–∞';

human.mama = mom;

console.log(human.mama); // "–º–∞–º–∞"
console.log(human);

// üß∞ –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —Å–≤–æ–π—Å—Ç–≤–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º: üß∞
let friend = '–¥—Ä—É–≥';

const anybody = {
  friend: friend
};

friend = '–ò –Ω–µ –¥—Ä—É–≥, –∏ –Ω–µ –≤—Ä–∞–≥, –∞ —Ç–∞–∫...';

console.log(anybody.friend); // "–¥—Ä—É–≥"

// üß∞ –¢–æ—á–Ω–æ —Ç–∞–∫ –∂–µ –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –≤ —Å–≤–æ–π—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—é: üß∞

const father = function () {
  console.log('–õ—é–∫, —è —Ç–≤–æ–π –æ—Ç–µ—Ü!');
};
const another = {
  father: father
};

console.log(another.father());

/* –≤ ES2015 –ø–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π —Å–ø–æ—Å–æ–± –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞. 
–¢–µ–ø–µ—Ä—å —Å–≤–æ–π—Å—Ç–≤–æ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–æ, –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è: */

const humanT = '–î—è–¥—è –§—ë–¥–æ—Ä';
const catT = '–ú–∞—Ç—Ä–æ—Å–∫–∏–Ω';
const dogT = '–®–∞—Ä–∏–∫';

function getCartoonName() {
  return '–¢—Ä–æ–µ –∏–∑ –ü—Ä–æ—Å—Ç–æ–∫–≤–∞—à–∏–Ω–æ';
}

const cartoon = {
  humanT,
  catT,
  dogT,
  getCartoonName
};

/* –ï—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤ –Ω–µ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ, –º–æ–∂–Ω–æ —É–º–µ—Å—Ç–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É:
    üî∏ const cartoon = { human, cat, dog, getCartoonName };  
*/

// üß∞ –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ —Å–≤–æ–π—Å—Ç–≤—É üß∞

const myFavObf = {
  cantry: 'Russia',
  '–ù–∞–≤—Å–µ–≥–¥–∞ —è —Ç—É—Ç': false,
  '–ë—É–¥—É —Å–∫—É—á–∞—Ç—å': true
}

console.log(myFavObf["–ù–∞–≤—Å–µ–≥–¥–∞ —è —Ç—É—Ç"]); // false

// üß∞ –ö–ª—é—á-–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è üß∞

const objT = {
  one: 1
};

const keyTObj = 'one';

console.log(objT[keyTObj]); // 1 

// ‚úÖ

const welcomeT = {
  '–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å': '–∏–ª–∏ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–º –≤—Ö–æ–¥ –≤–æ—Å–ø—Ä–µ—â—ë–Ω'
};

const part1 = '–¥–æ–±—Ä–æ';
const part2 = '–ø–æ–∂–∞–ª–æ–≤–∞—Ç—å';

const keyForWelcomeT = `${part1} ${part2}`;

console.log(welcomeT[keyForWelcomeT]); // "–∏–ª–∏ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–º –≤—Ö–æ–¥ –≤–æ—Å–ø—Ä–µ—â—ë–Ω"

// ‚úÖ –ò–ª–∏ –µ—Å–ª–∏ –º—ã –Ω–µ –∑–Ω–∞–µ–º –∏–º–µ–Ω–∏ –∫–ª—é—á–∞ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:

const objColor = {
  red: '#f00',
  green: '#0f0',
  blue: '#00f',
};

//const keyForObjColor = prompt('red, green –∏–ª–∏ blue?'); // –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä, red

//console.log(objColor[keyForObjColor]); // "#f00"


// ‚úÖ 

const birthday = {
  vadim: {
      month: '–º–∞—Ä—Ç',
      day: 31
  }    ,
  lena: {
      month: '–∞–ø—Ä–µ–ª—å',
      day: 27
  }
};

console.log(birthday.lena.month); // "–∞–ø—Ä–µ–ª—å"
console.log(birthday['lena']['month']); // "–∞–ø—Ä–µ–ª—å"

let t = 'vadim';
let p = 'mon';

birthday[t][p] = '–¥–µ–∫–∞–±—Ä—å'

console.log(birthday.vadim.month); // '–¥–µ–∫–∞–±—Ä—å'
console.log(birthday);

birthday['—Å–∞—à–∞'] = '–∏—é–Ω—å';
birthday['day'] = '6';
birthday[1] = '–µ–¥–∏–Ω–∏—Ü–∞';
birthday[true] = '–∏—Å—Ç–∏–Ω–∞';

console.log(birthday['—Å–∞—à–∞']);
console.log(birthday['day']);
console.log(birthday['1']); // "–µ–¥–∏–Ω–∏—Ü–∞"
console.log(birthday['true']); // "–∏—Å—Ç–∏–Ω–∞" 
console.log(birthday); /*{
  '1': '–µ–¥–∏–Ω–∏—Ü–∞',
  vadim: { month: '–¥–µ–∫–∞–±—Ä—å', day: 31 },
  lena: { month: '–∞–ø—Ä–µ–ª—å', day: 27 },
  '—Å–∞—à–∞': '–∏—é–Ω—å',
  day: '6',
  true: '–∏—Å—Ç–∏–Ω–∞'
} */

// ‚úÖ 

const welcomeMessages = {
  russian: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å',
  english: 'Welcome',
  french: 'Bienvenue',
  italian: 'Benvenuto',
  spanish: 'bienvenido',
  chinese: 'Ê≠°Ëøé',
  finnish: 'Tervetuloa'
};

function addWelcomeMessage(language, message) {
  welcomeMessages[language] = message;
}

addWelcomeMessage('danish', 'Velkommen');
addWelcomeMessage('zulu', 'Ukwamukela');

console.log(welcomeMessages.danish); // "Velkommen"
console.log(welcomeMessages.zulu); // "Ukwamukela"

// ‚úÖ 

const phonebook = {
  '–¢—ë–º–∞': {
    mobile: '+79995164420',
    work: '+79569172374',
    home: '+78123552223'
  },
  '–í–∞—Å—è –±—Ä–∞—Ç –ê–Ω–¥—Ä–µ—è': {
    mobile: '+79045174415'
  }
};


function addPhoneNumber(name, numberType, number) {
  if (!phonebook[name]){
    phonebook[name] = {};
  };
  phonebook[name][numberType] = number;
  
};

// –∫–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–∞, –¥–æ–±–∞–≤—å—Ç–µ –º–æ–±–∏–ª—å–Ω—ã–π –ê–Ω–∞—Å—Ç–∞—Å–∏–∏ –ü–∞–≤–ª–æ–≤–Ω—ã
addPhoneNumber('–ê–Ω–∞—Å—Ç–∞—Å–∏—è –ü–∞–≤–ª–æ–≤–Ω–∞', 'mobile', '+79111545616');

console.log(phonebook['–ê–Ω–∞—Å—Ç–∞—Å–∏—è –ü–∞–≤–ª–æ–≤–Ω–∞'].mobile); // "+79111545616"

// ‚úÖ 
// –µ—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –∫–ª—é—á–∞ –Ω–µ—Ç, —Ç–æ –≤—ã–≤–µ–¥–µ—Ç 0
const yourNumber = '–õ059';
let windowNumber;

const windows = {
  '–õ054': 1,
  '–õ055': 2,
  '–õ056': 3,
  '–õ057': 4,
  '–õ058': 5
};

windowNumber = windows[yourNumber] || 0;

console.log(windowNumber); // 0

// ‚úÖ

let jackSparrow = '–î–∂–µ–∫ –í–æ—Ä–æ–±–µ–π';
let captain = jackSparrow;

console.log(`–û–¥–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: ${jackSparrow}, –≤—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: ${captain}`);
// –û–¥–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: –î–∂–µ–∫ –í–æ—Ä–æ–±–µ–π, –≤—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: –î–∂–µ–∫ –í–æ—Ä–æ–±–µ–π

captain = `–ö–∞–ø–∏—Ç–∞–Ω ${jackSparrow}`;

console.log(`–û–¥–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: ${jackSparrow}, –≤—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: ${captain}`);
// –û–¥–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: –î–∂–µ–∫ –í–æ—Ä–æ–±–µ–π, –≤—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: –ö–∞–ø–∏—Ç–∞–Ω –î–∂–µ–∫ –í–æ—Ä–æ–±–µ–π


// ‚úÖ

const firstPirate = {
  name: '–î–∂–µ–∫',
  nickName: '–í–æ—Ä–æ–±–µ–π',
};

const secondPirate = firstPirate;
secondPirate.rank = '–ö–∞–ø–∏—Ç–∞–Ω';

console.log(firstPirate);
// { name: "–î–∂–µ–∫", nickName: "–í–æ—Ä–æ–±–µ–π", rank: "–ö–∞–ø–∏—Ç–∞–Ω" }

console.log(secondPirate);
// { name: "–î–∂–µ–∫", nickName: "–í–æ—Ä–æ–±–µ–π", rank: "–ö–∞–ø–∏—Ç–∞–Ω" }

// ‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤

const objT1 = {};
const objT2 = {};
console.log(objT1 === objT2); // false 

const time = {};
const money = time;
console.log(time === money); // true. –í–µ–¥—å time –∏ money ‚Äî —ç—Ç–æ –¥–≤–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç

const user1 = {
  nickname: 'Vasya2000',
  name: '–í–∞—Å—è',
  surname: '–ü—É–ø–∫–∏–Ω'
};

const user2 = {
  nickname: 'Vasya2000',
  name: '–í–∞—Å—è',
  surname: '–ü—É–ø–∫–∏–Ω'
};

const user3 = user1;

console.log(user1 === user2); // false
console.log(user2 === user3); // false
console.log(user1 === user3); // true

// ‚úÖ —Ñ—É–Ω–∫—Ü–∏—è compare –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–≤—É—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —Å—Å—ã–ª–∫–µ.

function compare(firstObj, secondObj) {
  return firstObj === secondObj;
}

const firstTO = {
  property: 'value'
};

const secondTO = {
  property: 'value'
};

const thirdTO = secondTO;

console.log(compare(firstTO, secondTO)); // false
console.log(compare(secondTO, thirdTO)); // true

// ‚úÖ —Ñ—É–Ω–∫—Ü–∏—è isEqual, –∫–æ—Ç–æ—Ä–∞—è —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –ø–æ —Å–≤–æ–π—Å—Ç–≤–∞–º –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º.

function isEqual(firstObj, secondObj) {
  const firstKeys = Object.keys(firstObj);
  const secondKeys = Object.keys(secondObj);

  // –ø—Ä–æ–≤–µ—Ä–∏–º, –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π –≤ –æ–±—ä–µ–∫—Ç–∞—Ö
  if (firstKeys.length !== secondKeys.length) {
    // –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –≤—Å—ë: –æ–±—ä–µ–∫—Ç—ã —Ç–æ—á–Ω–æ –Ω–µ —Ä–∞–≤–Ω—ã
    return false;
  }

  /* –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª—é—á–∞ –ø–µ—Ä–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
  –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–µ—Ä–≤–æ–º –∏ –≤—Ç–æ—Ä–æ–º –æ–±—ä–µ–∫—Ç–µ —Ä–∞–≤–Ω—ã */
  return firstKeys.every( key => ( firstObj[key] === secondObj[key] ));
} 

const first = {
  property: 'value',
  anotherProperty: 'another value'
};

const second = {
  property: 'value',
  anotherProperty: 'another value'
};

console.dir(second);
const third = {
  property: 'value',
  anotherProperty: 'one more value'
};

console.log(isEqual(first, second)); // true
console.log(isEqual(second, third)); // false

const collect = 1;
console.log(collect.times)

// ‚úÖ —Ñ—É–Ω–∫—Ü–∏—é counter, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å—á–∏—Ç–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –µ—ë –≤—ã–∑–≤–∞–ª–∏, –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —ç—Ç–æ —á–∏—Å–ª–æ –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

// function counter() {
//   // –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∫–æ–¥ –∑–¥–µ—Å—å
//   if(!counter.times) {
//     counter.times = 0;
//   } 
//   return counter.times += 1;
// }

// console.log(counter()); // 1
// console.log(counter()); 
// console.log(counter());
// console.log(counter());
// console.log(counter()); // 5

