//                                               Сортировка массива. Метод SORT
//                                                   меняет исходный массив !!
// Метод sort, если не передавать ему аргументы, пытается сортировать элементы массива по возрастанию кодов (Unicode). // По умолчанию приобразует элемент в строку
const myNumbers = [0, 3.14, 2.718, 13];
myNumbers.sort();
console.log(myNumbers); // [0, 13, 2.718, 3.14] 

//

const fruits = ['яблоко', 'банан', 'апельсин', 'томат'];
fruits.sort(); // ["апельсин", "банан", "томат", "яблоко"] 
console.log(fruits); //  ["апельсин", "банан", "томат", "яблоко"]

//                                               Функции обратного вызова для сортировки

/* 
1. Меньше нуля — первый элемент, переданный как аргумент колбэка, встанет в массиве раньше второго.
2. Больше нуля — наоборот, второй элемент окажется раньше первого.
3. Равно нулю — порядок не изменится, элементы будут стоять как в исходном массиве. 
*/

const testArrSort = [23, 45, 12, 9 , 0 , 220];
testArrSort.sort(function(a, b) {
    console.log(a + " " + b);
 });
console.log(testArrSort);

testArrSort.sort((a, b) => {
  console.log(`Сравнимаем ${a} и ${b}`);
  if(a < b) return -1;
  if(a > b) return 1;
  return 0;
})
console.log(testArrSort);

const myNumbers2 = [0, 3.14, 2.718, 13]; // Для чисел такой подход отлично работает: 
//если вы хотите отсортировать массив по возрастанию, колбэк должен возвращать a - b, по убыванию : b - a.

myNumbers.sort(function (a, b) {
    return a - b;

  /* Если a меньше b, вернётся отрицательное число.
  Это значит, что a должно расположиться в итоговом массиве
  раньше, b — позже. Например:

    a = 0, b = 3.14
    a - b = -3.14

  Получили отрицательное число, значит a стоит раньше b */
});

console.log(myNumbers2); // [0, 2.718, 3.14, 13] — так и есть 

/* Диагнозы записаны в том порядке,
в каком поступили пациенты. Отсортируем его по алфавиту. */

const diagnoses = [
  'мизофобия',
  'синдром упущенной выгоды',
  'боязнь красного цвета'
];

diagnoses.sort(function(a, b) {
  /* приведём строки к нижнему регистру,
  чтобы сравнение прошло корректно */
  a = a.toLowerCase();
  b = b.toLowerCase();
  console.log(a);
  console.log(b);
  if (a < b) return -1; // a расположится раньше b
  if (b < a) return 1; // b расположится раньше a

  return 0;
});

console.log(diagnoses);

/* ["боязнь красного цвета", "мизофобия", "синдром упущенной выгоды"] */ 

let bob = 'болезнь';
let job = 'зараза'
const testNewreduce = bob[job] = 1;
console.log(testNewreduce);

let string1 = 'тут одно слово';
let string2 = 'тут два слова';

console.log(string1 > string2);

console.log('0' === '0');

const arrfortest = ['ящерица', 'попугай', 'кот', 'аист',];

let newarrfortest =  arrfortest.sort();
console.log(newarrfortest);

const asssa = [
  'эффект аиста', 'вонь осла', 'пыль из-под колес'
];

asssa.sort();
console.log(asssa)
