//                                                üß∞ –°–≤–µ–¥–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞. –ú–µ—Ç–æ–¥ REDUCE üß∞
//                                                  –Ω–µ –º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤
// –ú–µ—Ç–æ–¥ reduce –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –∏ —Å–≤–æ–¥–∏—Ç –µ–≥–æ –∫ –æ–¥–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é
/* –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –Ω–æ–≤—ã–π –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –∏ –≥–ª–∞–≤–Ω–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å reduce. 
–ù–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ —ç—Ç–æ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç —Ä–∞–≤–µ–Ω —Ç–æ–º—É, —á—Ç–æ –≤ –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑ –≤–µ—Ä–Ω—É–ª –∫–æ–ª–±—ç–∫. */
const arrReduce = [1, 2, 3, 4, 5, 6, 7, 8, 9];

const sumReduce = arrReduce.reduce(function (–ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ–ó–Ω–∞—á–µ–Ω–∏–µ, item) {
  // –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç —Ä–∞–≤–µ–Ω —Ç–æ–º—É, —á—Ç–æ –≤ –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑ –≤–µ—Ä–Ω—É–ª –∫–æ–ª–±—ç–∫ (item)
  return –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ–ó–Ω–∞—á–µ–Ω–∏–µ + item;
  // ¬´–ø—Ä–∏–±–∞–≤—å —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –∫ —Ç–æ–º—É, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏¬ª
});
console.log(sumReduce); // 45

//      –ü—Ä–∏–º–µ—Ä

const testReduce = [1, 2, 3, 4, 5, 6, 7, 8, 9];

const sumTest= testReduce.reduce(function (previousValue, item) {
  // –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏ –≤—ã–≤–µ–¥–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ –∫–æ–Ω—Å–æ–ª—å
  console.log(`previousValue: ${previousValue}, item: ${item}`);
  return previousValue + item;
});

console.log(`sumaaa: ${sumTest}`);

/*
 previousValue: 1, item: 2
 previousValue: 3, item: 3
 previousValue: 6, item: 4
 previousValue: 10, item: 5
 previousValue: 15, item: 6
 previousValue: 21, item: 7
 previousValue: 28, item: 8
 previousValue: 36, item: 9
 sumTest: 45
*/ 

//   –ü—Ä–∏–º–µ—Ä
// –ü–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –º–µ—Ç–æ–¥–∞ reduce ‚Äî –∫–æ–ª–±—ç–∫. –ê –≤–æ—Ç –≤—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ previousValue –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏.

/* –°–æ–∑–¥–∞–¥–∏–º –º–∞—Å—Å–∏–≤, —Ö—Ä–∞–Ω—è—â–∏–π –≤ —Å–µ–±–µ –∏—Å—Ç–æ—Ä–∏—é –≤—ã–∏–≥—Ä—ã—à–µ–π
–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–µ–π –æ–¥–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ –∫–∞–∑–∏–Ω–æ. */
const winsAndLoses = [190, 117, -381, -394, -36, 137, -473, 372, -383];

/* –ü–æ—Å—á–∏—Ç–∞–µ–º, –∫–∞–∫–∞—è —Å—É–º–º–∞ –¥–µ–Ω–µ–≥ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è —É —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞
–∫ –∫–æ–Ω—Ü—É –≤–µ—á–µ—Ä–∞, –µ—Å–ª–∏ –≤–Ω–∞—á–∞–ª–µ —É –Ω–µ–≥–æ –±—ã–ª–æ —Å —Å–æ–±–æ–π 1000. */
const total = winsAndLoses.reduce(function (previousValue, item) {
    return previousValue + item;
}, 1000); // –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—ë–º –º–µ—Ç–æ–¥—É reduce –∫–∞–∫ –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç.

console.log(total); // 149

// –ó–∞–¥–∞—á—É –º–æ–∂–Ω–æ —Ä–µ—à–∏—Ç—å –∏–Ω–∞—á–µ ‚Äî –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –º–µ—Ç–æ–¥—É reduce –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç, –∞ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–±–∞–≤–∏—Ç—å 1000 –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π total:
const total2 = 1000 + winsAndLoses.reduce(function (previousValue, item) {
  return previousValue + item;
});

console.log(total2); // 149
// –≠—Ç–æ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –∫–æ–≥–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã reduce ‚Äî —á–∏—Å–ª–æ –∏–ª–∏ —Å—Ç—Ä–æ–∫–∞. –ö–æ–≥–¥–∞ –Ω–∞ –≤—ã—Ö–æ–¥–µ –Ω—É–∂–µ–Ω –º–∞—Å—Å–∏–≤ –∏–ª–∏ –æ–±—ä–µ–∫—Ç, –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω.

//   –ü—Ä–∏–º–µ—Ä 

const acrostic = [
  '–î–æ–≤–æ–ª—å–Ω–æ –∏–º–µ–Ω–µ–º –∏–∑–≤–µ—Å—Ç–Ω–∞ —è —Å–≤–æ–∏–º;',
  '–†–∞–≤–Ω–æ –∫–ª—è–Ω—ë—Ç—Å—è –ø–ª—É—Ç –∏ –Ω–µ–ø–æ—Ä–æ—á–Ω—ã–π –∏–º,',
  '–£—Ç–µ—Ö–æ–π –≤ –±–µ–¥—Å—Ç–≤–∏—è—Ö –≤—Å–µ–≥–æ –±—ã–≤–∞—é –±–æ–ª–µ,',
  '–ñ–∏–∑–Ω—å —Å–ª–∞–¥–æ—Å—Ç–Ω–µ–π –ø—Ä–∏ –º–Ω–µ –∏ –≤ —Å–∞–º–æ–π –ª—É—á—à–µ–π –¥–æ–ª–µ.',
  '–ë–ª–∞–∂–µ–Ω—Å—Ç–≤—É —á–∏—Å—Ç—ã—Ö –¥—É—à –º–æ–≥—É —Å–ª—É–∂–∏—Ç—å –æ–¥–Ω–∞,',
  '–ê –º–µ–∂ –∑–ª–æ–¥–µ—è–º–∏ ‚Äî –Ω–µ –±—ã—Ç—å —è —Å–æ–∑–¥–∞–Ω–∞.'
];

const cipherWord = acrostic.reduce(function (prevVal, item) {
  return prevVal + item[0];
}, '');

console.log(cipherWord); // "–î–†–£–ñ–ë–ê"

//   –ü—Ä–∏–º–µ—Ä

const order = ['—è–±–ª–æ–∫–æ', '–±–∞–Ω–∞–Ω', '–∞–ø–µ–ª—å—Å–∏–Ω', '–±–∞–Ω–∞–Ω', '—è–±–ª–æ–∫–æ', '–±–∞–Ω–∞–Ω'];

const result = order.reduce(function (prevVal, item) {
  if (!prevVal[item]) {
    // –µ—Å–ª–∏ –∫–ª—é—á–∞ –µ—â—ë –Ω–µ—Ç –≤ –æ–±—ä–µ–∫—Ç–µ, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –ø–µ—Ä–≤–æ–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ
    console.log(!prevVal[item]);
    prevVal[item] = 1; 
    console.log(prevVal[item]);
  } else {
    // –∏–Ω–∞—á–µ —É–≤–µ–ª–∏—á–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –Ω–∞ 1
    prevVal[item] += 1; /*{—è–±–ª–æ–∫–æ: 1}
                          {—è–±–ª–æ–∫–æ: 1, –±–∞–Ω–∞–Ω: 1}
                          {—è–±–ª–æ–∫–æ: 1, –±–∞–Ω–∞–Ω: 1, –∞–ø–µ–ª—å—Å–∏–Ω: 1}
                          {—è–±–ª–æ–∫–æ: 2, –±–∞–Ω–∞–Ω: 3, –∞–ø–µ–ª—å—Å–∏–Ω: 1} */
  }

  // –∏ –≤–µ—Ä–Ω—ë–º –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
  return prevVal;
}, {}); // –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç.

console.log(result); // { —è–±–ª–æ–∫–æ: 2, –±–∞–Ω–∞–Ω: 3, –∞–ø–µ–ª—å—Å–∏–Ω: 1 } 