//                                                        üß∞ –ú–∞—Å—Å–∏–≤ –∏–∑ Set üß∞ 
/* Set (–ø–æ-—Ä—É—Å—Å–∫–∏ –≥–æ–≤–æ—Ä—è—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ) ‚Äî –∫–æ–ª–ª–µ–∫—Ü–∏—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ª—é–±–æ–≥–æ —Ç–∏–ø–∞. 
–û–¥–Ω–æ –∏ —Ç–æ –∂–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –≤ Set –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞. */
/* Set ‚Äî —ç—Ç–æ –Ω–µ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è, –ø–æ–ª–æ–∂–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é –º–æ–∂–Ω–æ, –Ω–æ –¥–æ—Å—Ç–∞—Ç—å –Ω–µ–ª—å–∑—è. 
–ü–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –∏—Ç–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.*/
/*
‚ñ´ üî∫ add() ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç.
  üî∫ delete() ‚Äî —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç.
  üî∫ has() ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏.
  üî∫ clear() ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é.
  üî∫ forEach() ‚Äî –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –æ–¥–Ω–æ–∏–º—ë–Ω–Ω–æ–º—É –º–µ—Ç–æ–¥—É –º–∞—Å—Å–∏–≤–∞.
*/

// ‚úÖ
const uniqueIds = new Set()

uniqueIds.add(123)
uniqueIds.add(456)
uniqueIds.add(111)
uniqueIds.add(123)

console.log(uniqueIds.size)
// 3 ; (123) –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ —á–∏—Å–ª–æ, –æ–Ω–æ –Ω–µ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ 

// ‚úÖ Set –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –±—ã–ª –ª–∏ —ç–ª–µ–º–µ–Ω—Ç —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω. –ó–∞ —ç—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –º–µ—Ç–æ–¥ has()
console.log(uniqueIds.has(111))
// true

uniqueIds.delete(111)
console.log(uniqueIds.size)
// 2

// ‚úÖ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å Set –º–æ–∂–Ω–æ –º–µ—Ç–æ–¥–æ–º clear().
uniqueIds.clear()
console.log(uniqueIds.size)
// 0

// üß∞ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ üß∞

const newSet = new Set()

console.log(set.size) // 0

// ‚úÖ

const filled = new Set([1, 2, 3, 3, 3, 'hello']);

console.log(filled.size); // 4

// üß∞ –†–∞–±–æ—Ç–∞ —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π üß∞

const filled2 = new Set([1, 2, 3, '3', 3, 'hello'])

filled2.add(100);
filled2.delete(1);

// 1Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ forEach(), –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –æ–¥–Ω–æ–∏–º—ë–Ω–Ω–æ–º—É –º–µ—Ç–æ–¥—É –º–∞—Å—Å–∏–≤–∞:

filled2.forEach(function(value) {
  console.log(value)
})

// 1
// 2
// 3
// '3'
// 'hello'

// 2Ô∏è‚É£ –í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è for...of:

for (let n of filled2) {
  console.log(n)
}
// 1
// 2
// 3
// '3'
// 'hello'

// ‚úÖ –ú–æ–≥—É—Ç –±—ã—Ç—å —Ä–∞–∑–Ω—ã–µ –∞–¥—Ä–µ—Å–∞ –ø–∞–º—è—Ç–∏
const cheapShirt = { size: 'L', color: 'white' }
const fancyShirt = { size: 'L', color: 'white' }

console.log(cheapShirt === fancyShirt)
// false
console.log(cheapShirt === cheapShirt)
// true
console.log(fancyShirt === fancyShirt)
// true

/* –ú—ã —Å–æ–∑–¥–∞–ª–∏ –¥–≤–∞ —Ä–∞–∑–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞ (—Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏ —Å–æ–∑–¥–∞—é—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç), 
–∫–æ—Ç–æ—Ä—ã–µ –≤—ã–≥–ª—è–¥—è—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ, –Ω–æ –ø–æ —Ñ–∞–∫—Ç—É —ç—Ç–æ —Ä–∞–∑–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã. 
–û–Ω–∏ –Ω–µ —Ä–∞–≤–Ω—ã –¥—Ä—É–≥ –¥—Ä—É–≥—É ‚Äî –µ—Å–ª–∏ –≤ –æ–¥–∏–Ω –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ, —Ç–æ –≤—Ç–æ—Ä–æ–π –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è. */

// ‚úÖ –ü–æ–ø—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–∏ –æ–±—ä–µ–∫—Ç—ã –≤ Set:

const closetSetT = new Set();
closetSetT.add(cheapShirt);
closetSetT.add(fancyShirt);

console.log(closetSetT.size);
// 2

// ‚úÖ –ï—Å–ª–∏ –∂–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥–æ–±–∞–≤–∏—Ç—å –∏—Ö –≤—Ç–æ—Ä–æ–π —Ä–∞–∑, —Ç–æ —ç—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∞:
closetSetT.add(cheapShirt)
closetSetT.add(cheapShirt)
closetSetT.add(fancyShirt)

console.log(closetSetT.size)
// 2

/* üõ† –° –ø–æ–º–æ—â—å—é Set –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ –º–∞—Å—Å–∏–≤–∞ 
–Ω–µ—É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –∏ —Å–ø—Ä–µ–¥-—Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: */

const nonUnique = [1, 2, 3, 4, 5, 4, 5, 1, 1]
const uniqueValuesArr = [...new Set(nonUnique)]

console.log(uniqueValuesArr)
// [1, 2, 3, 4, 5]

