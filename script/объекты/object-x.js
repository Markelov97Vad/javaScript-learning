//           üß∞ Object.keys üß∞
// –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –æ–±—ä–µ–∫—Ç –≤ –º–∞—Å—Å–∏–≤
const expenses = {
  '—Ä—É–ø': '–Ω–∞ —Å—É–ø',
  '—Ç—Ä—ë—à–∫—É': '–Ω–∞ –∫–∞—Ä—Ç–æ—à–∫—É',
  '–ø—è—Ç—ë—Ä–∫—É': '–Ω–∞ —Ç–µ—Ç—ë—Ä–∫—É', 
  '–¥–µ—Å—è—Ç–∫—É': '–Ω–∞ –∫—É—Ä–æ–ø–∞—Ç–∫—É',
  '—Å–æ—Ç–∫—É': '–Ω–∞ *–æ–¥–∫—É'
};
const arrExpenses = Object.keys(expenses); // [ '—Ä—É–ø', '—Ç—Ä—ë—à–∫—É', '–ø—è—Ç—ë—Ä–∫—É', '–¥–µ—Å—è—Ç–∫—É', '—Å–æ—Ç–∫—É' ]
console.log(arrExpenses);
// –º–µ—Ç–æ–¥–æ–º forEach  –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –ø—Ä–∏ –ø–æ–º–æ—â–∏ Object.keys
arrExpenses.forEach(function (a) {
  console.log(a);
});

/* –≤ –∫–æ–Ω—Å–æ–ª–∏ –≤—ã–≤–æ–¥—è—Ç—Å—è –∫–ª—é—á–∏:

  —Ä—É–ø
  —Ç—Ä—ë—à–∫—É
  –ø—è—Ç—ë—Ä–∫—É
  –¥–µ—Å—è—Ç–∫—É
  —Å–æ—Ç–∫—É

*/ 

/* 
 ‚úÖ
const expenses = {
    '100': '–Ω–∞ *–æ–¥–∫—É',
    '10': '–Ω–∞ –∫—É—Ä–æ–ø–∞—Ç–∫—É',
    '5': '–Ω–∞ —Ç–µ—Ç—ë—Ä–∫—É',
    '3': '–Ω–∞ –∫–∞—Ä—Ç–æ—à–∫—É',
    '1': '–Ω–∞ —Å—É–ø'
};

Object.keys(expenses).forEach(function (a) {
    // –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏ –≤—ã–≤–µ–¥–µ–º –≤–º–µ—Å—Ç–µ —Å –∫–ª—é—á–∞–º–∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è 
    console.log(`${a} ‚Äî ${expenses[a]}`);
});

 –¥–≤–∏–∂–æ–∫ —É–ø–æ—Ä—è–¥–æ—á–∏–ª –∫–ª—é—á–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è, 
–∏ –≤—ã–≤–æ–¥ –ø–æ–ª—É—á–∏–ª—Å—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∫ —É –û–ª–µ–π–Ω–∏–∫–æ–≤–∞

    1 ‚Äî –Ω–∞ —Å—É–ø
    3 ‚Äî –Ω–∞ –∫–∞—Ä—Ç–æ—à–∫—É
    5 ‚Äî –Ω–∞ —Ç–µ—Ç—ë—Ä–∫—É
    10 ‚Äî –Ω–∞ –∫—É—Ä–æ–ø–∞—Ç–∫—É
    100 ‚Äî –Ω–∞ *–æ–¥–∫—É

*/

// .           üß∞ Object.entries –∏ Object.values üß∞
// –ú–µ—Ç–æ–¥ Object.values –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤—Å–µ—Ö —Å–≤–æ–π—Å—Ç–≤ –∏ –º–µ—Ç–æ–¥–æ–≤ –æ–±—ä–µ–∫—Ç–∞, –∞ Object.entries ‚Äî –≤—Å–µ –ø–∞—Ä—ã ¬´–∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ¬ª.

const paulMcCartney = {
  yesterday: 'all my troubles seemed so far away'
};

console.log( Object.values(paulMcCartney) ); // ["all my troubles seemed so far away"]
console.log( Object.entries(paulMcCartney) ); // [["yesterday", "all my troubles seemed so far away"]]

// ‚úÖ

const heights = {
  burjKhalifa: 828,
  tokyoSkyTree: 634,
  shanghaiTower: 632,
  abrajAlBait: 601,
  cantonTower: 600,
  pingAnFinanceCentre: 600,
  lotteWorldTower: 555,
  cnTower: 553,
  oneWorldTradeCenter: 541,
  ostankinoTower: 540
};

const stratoHeight = 11000;

const sumHeights = Object.values(heights).reduce((preV, elem) => preV + elem );

//console.log(sumHeights);
console.log(sumHeights >= stratoHeight);

// ‚úÖ

const mya = {
  '–±—Ä–µ–º—è': 'burden',
  '–≤—Ä–µ–º—è': 'time',
  '–≤—ã–º—è': 'udder',
  '–º—è—á': 'ball',
  '–∑–Ω–∞–º—è': 'banner',
  '–∏–º—è': 'name',
  '–º—è—Å–æ': 'meat',
};

Object.keys(mya).forEach(function (key) {
  if(!key.endsWith('–º—è')){
    delete mya[key];
  }
});

console.log(mya);

/*

  {
    –±—Ä–µ–º—è: "burden",
    –≤—Ä–µ–º—è: "time",
    –≤—ã–º—è: "udder",
    –∑–Ω–∞–º—è: "banner",
    –∏–º—è: "name"
  }

*/

// ‚úÖ –ø–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏ –∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏—è

function swap(obj) {
  const res = {};

  // –¥–æ–±–∞–≤—å—Ç–µ –≤ res –∫–ª—é—á–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è obj, –ø–æ–º–µ–Ω—è–≤ –∏—Ö –º–µ—Å—Ç–∞–º–∏
Object.keys(obj).forEach( item => {
  //        myObj[fitst] // 1
  let col = obj[item];
  // {}[1]  // first
  res[col] = item;
});
  return res;
}

const myObj = {
  first: 1,
  second: 2,
  third: 3
};

console.log(myObj); // { first: 1, second: 2, third: 3 }
console.log(swap(myObj)); // { 1: "first", 2: "second", 3: "third" }

// ‚úÖ —Ñ—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤

function copy(obj) {
  // –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∫–æ–¥ –∑–¥–µ—Å—å
  const res = {};
  
  Object.keys(obj).forEach(function (key) {
//{}[one]/one=  1 // one: 1,
    res[key] = obj[key];
  });
  return res;
}

const firstObj = {
	one: 1,
	two: 2,
	three: 3
};

const secondObj = firstObj;
const thirdObj = copy(firstObj);

console.log(firstObj); // { one: 1, three: 3, two: 2 }
console.log(secondObj); // { one: 1, three: 3, two: 2 }
console.log(thirdObj); // { one: 1, three: 3, two: 2 }

firstObj.four = 4;

console.log(firstObj); // { four: 4, one: 1, three: 3, two: 2 }
console.log(secondObj); // { four: 4, one: 1, three: 3, two: 2 }

// thirdObj –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è
console.log(thirdObj); // { one: 1, three: 3, two: 2 }

//                    üß∞ –ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤  Object.assign üß∞

const firstObjTest = {
  din: 1,
  don: 2
};

const secondObjTest = Object.assign({}, firstObjTest);
console.log(secondObjTest);
console.log(secondObjTest === firstObjTest); // false 

const tutObj = {
  '–ø–µ—Ä–≤—ã–π –ø–æ—à–µ–ª': true,
  '–≤—Ç–æ—Ä–æ–π –ø–æ—à–µ–ª': 2022,
  —Å—é—Ä–ø—Ä–∏–∑: {
    0: '—Ç–æ–∂–µ —á–∏—Å–ª–æ'
  }
}

const tamObj = Object.assign({}, tutObj);

console.log(tutObj['–≤—Ç–æ—Ä–æ–π –ø–æ—à–µ–ª'] === tamObj['–≤—Ç–æ—Ä–æ–π –ø–æ—à–µ–ª']); // true
console.log(tutObj["—Å—é—Ä–ø—Ä–∏–∑"] === tamObj["—Å—é—Ä–ø—Ä–∏–∑"]); // true

// ‚úÖ –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–≤–µ—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç-–∫–æ–ø–∏—é –∏ —É–∂–µ —Ç—É–¥–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –Ω–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ.

function evolution(obj, key, value) {
  const newObj = Object.assign({}, obj);
  newObj[key] = value;
  return newObj;
}

const fish = {
  eggs: '–∏–∫—Ä–∞',
  eyes: 2,
  home: '–≤–æ–¥–∞'
};

const frog = evolution(fish, 'legs', 4);

console.log('–ª—è–≥—É—à–∫–∞: ', frog);

// –ª—è–≥—É—à–∫–∞: { eggs: –∏–∫—Ä–∞, eyes: 2, home: –≤–æ–¥–∞, legs:4 }

console.log('—Ä—ã–±–∞: ', fish);

// —Ä—ã–±–∞: { eggs: "–∏–∫—Ä–∞", eyes: 2, home: "–≤–æ–¥–∞" }

