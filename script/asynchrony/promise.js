// ? then — выполнится, если промис исполнен;
//?  catch — если отклонён;
//?  finally — выполнится в любом случае независимо от статуса промиса.

// Создаём промис
const newPromise = new Promise(function (resolve, reject) {
  /* Будем определять, обработан запрос
  или нет, случайным образом */
    const rand = Math.random() > 0.5 ? true : false;

    if (rand) {
        resolve('Запрос обработан успешно');
    } else {
        reject('Запрос отклонён');
    }
});

newPromise
  .then(function (value) { // Если промис был обработан

    /* Параметр value хранит значение, переданное методу
    resolve при создании промиса, то есть строку
    "Запрос обработан успешно" */

      console.log(value);
  })
  .catch(function (value) { // Если промис был отклонён

    /* Здесь параметр value будет хранить то значение,
    которое было передано методу reject, то есть строку
    "Запрос отклонён" */

      console.log(value + ', нам жаль :(');
  })
  .finally(function () { // В любом случае
      console.log('Как бы там ни было — запрос мы в глаза видели');
  }); 